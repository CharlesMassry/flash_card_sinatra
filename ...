class Card
  def initialize(attributes)
    @front = attributes[:front]
    @back = attributes[:back]
  end

  def play
    prompt
    result(@guess)
  end

  private
  attr_reader :front, :back

  def prompt
    print "#{front} > "
    @guess = gets.chomp.downcase
  end

  def result(guess)
    if correct?(guess)
      puts "Correct!"
    else
      puts "Failure!"
    end
  end

  def correct?(guess)
    guess.downcase == back.downcase
  end
end

class Deck
  attr_reader :name

  def initialize(name, cards)
    @name = name
    @cards = cards
  end

  def play
    @cards.shuffle.each do |card|
      card.play
    end
  end
end

class FlashCardGame
  def initialize(decks)
    @decks = decks
  end

  def play
    message
    loop do
      play_deck
    end
    puts "Goodbye!"
  end

  private
  def play_deck
      choose_deck = prompt
      if choose_deck != ""
        deck_find(choose_deck).play
      else
        break
      end
  end

  def welcome
    message  = "Welcome to the Flash Card Game"
    puts message
    puts "-" * message.length
  end

  def prompt
    print "What deck do you want? "
    gets.chomp
  end

  def deck_find(choose_deck)
    @decks.find do |deck|
      deck.name.downcase == choose_deck.downcase
    end
  end
end

class CardReader
  def initialize(file_name)
    @file = File.new(file_name, "r")
    @deck_count = @file.gets.to_i
  end

  def build
    @deck_count.times.map do
      deck_name = @file.gets.chomp
      card_count = @file.gets.to_i
      cards = card_build(card_count)
      Deck.new(deck_name, cards)
    end
  end

  private

  def card_build(card_count)
    card_count.times.map do
      Card.new({ front: @file.gets.chomp, back: @file.gets.chomp})
    end
  end
end

decks = CardReader.new("card.txt").build
game = FlashCardGame.new(decks)
game.play

